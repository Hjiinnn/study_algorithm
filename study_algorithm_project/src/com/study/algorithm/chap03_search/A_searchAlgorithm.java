package com.study.algorithm.chap03_search;

import java.util.Scanner;

public class A_searchAlgorithm {

	/*
	 * 선형 검색 : 무작위로 늘어놓은 데이터 모임에서 검색을 수행한다.
	 * 이진 검색 : 일정한 규칙으로 늘어놓은 데이터 모임에서 아주 빠른 검색을 수행한다.
	 * 해시법 : 추가, 삭제가 자주 일어나는 데이터 모임에서 아주 빠른 검색을 수행한다.
	 * 		  - 체인법 : 같은 해시 값의  데이터를 선형 리스트로 연결하는 방법
	 * 	      - 오픈 주소법 : 데이터를 위한 해시 값이 충돌할 때 재해시하는 방법
	 */
	
	/*
	 * 검색뿐만 아니라 데이터의 추가, 삭제 등을 자주하는 경우에는 작업에 소요되는 비용을 종합적으로 평가하여 알고리즘을 선택해야 한다.
	 * 예를 들면, 데이터 추가를 자주 하는 경우에는 검색이 빠르더라도 데이터의 추가 비용이 많이 들어가는 알고리즘은 피해야 한다.
	 * 따라서 선택할 수 있는 알고리즘이 여러 가지인 경우에는 용도나 목적, 실행 속도, 자료구조 등을 고려하여 알고리즘을 선택해야 한다.
	 */
	
}
